extends layout

block append metatags
	meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1.0, minimum-scale=0.5, user-scalable=0')
	meta(name='apple-mobile-web-app-capable', content='yes')
	meta(name='apple-mobile-web-app-status-bar-style', content='black-translucent')
	meta(name='apple-mobile-web-app-title', content='Pokanikki tuomarointi')

block append styles
	link(rel='stylesheet', href='http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.css')
	link(rel='stylesheet', href='/stylesheets/vendor/jquery-ui-1.10.3.custom.min.css')
	link(rel='stylesheet', href='/stylesheets/vendor/add2home.css')	
	link(rel="stylesheet" href="/stylesheets/vendor/foundation-icons.css")	
	link(rel="apple-touch-icon" sizes="120x120" href="/images/dum-touch-icon-120x120.png")
	link(rel="apple-touch-icon" sizes="144x144" href="/images/dum-touch-icon-144x144.png")
	link(rel="apple-touch-icon" sizes="152x152" href="/images/dum-touch-icon-152x152.png")
	link(rel="apple-touch-icon" sizes="114x114" href="/images/dum-touch-icon-114x114.png")
	link(rel="apple-touch-icon" sizes="76x76" href="/images/dum-touch-icon-76x76.png")
	link(rel="apple-touch-icon" sizes="72x72" href="/images/dum-touch-icon-72x72.png")
	link(rel="apple-touch-icon" sizes="57x57" href="/images/dum-touch-icon-57x57.png")
	
	link(rel='stylesheet', href='/stylesheets/app_styles.css')
	
block site_styles

block append scripts
	script(src='/javascripts/vendor/jquery.mobile-1.3.2.min.js')
	script(src='/javascripts/vendor/jquery-ui-1.10.3.custom.min.js')
	script(src='/javascripts/vendor/jquery.ui.touch-punch.min.js')
	script(src='/javascripts/vendor/jquery.transit.min.js')
	script(src='/javascripts/vendor/iscroll.js')
	script(src='/javascripts/application.js?123123')
	script.
		var addToHomeConfig = {
			message: 'Lisää tuomarointisovellus kotivalikkoosi painamalla %icon ja valitsemalla <strong>Lisää Kotiin</strong>. Suosittelemme vahvasti että tuomarointisovellusta käytetään kotivalikon kautta.'
		}
	script(src='/javascripts/vendor/add2home.js')			

block site_scripts


block content

	- { if (session.user != null)
		input(type="hidden", id="sessname", value="#{session.user.name}", data-bind="text: session.name('#{session.user.name}')")
		input(type="hidden", id="sessid", value="#{session.user._id}", data-bind="text: session._id('#{session.user._id}')")
		input(type="hidden", id="sesshot", value="#{session.user.hotness}", data-bind="text: session.hotness('#{session.user.hotness}')")
		input(type="hidden", id="sessclub", value="#{session.user.club}", data-bind="text: session.club('#{session.user.club}')")
		input(type="hidden", id="sessrank", value="#{session.user.rank}", data-bind="text: session.rank('#{session.user.rank}')")
		input(type="hidden", id="sessuser", value="#{session.user.username}", data-bind="text: session.username('#{session.user.username}')")
	- }
	
	div#setup(data-role="page", data-theme="b")
		div.loginSetupTop(data-role="header", data-position="fixed", data-fullscreen="true", data-theme="b")
		div(data-role="content", style="padding: 8px; padding-top: 30px")
			//a(data-role="button", data-mini="true", data-icon="arrow-l", data-inline="true", data-theme="c", data-ajax="false", data-bind="click: function() { window.location.href='/newgame' }") Palaa sivustolle
			
			div#yla(style="text-align: center; border-radius: 6px", data-theme="a", data-role="content")
			
				h2 Uusi peli
			
				span Pelaaja 1
				span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				span Pelaaja 2
				form
					fieldset(data-role="controlgroup" data-type="horizontal", data-mini="true")
						label(for="select-1") Pelaaja 1
						select(name="select-1" id="select-1" data-bind="jqmValue: playerOne, jqmOptions: playerList, optionsText: 'name'", data-theme="d")
							option(data-bind="text: name")
						label(for="select-2") Pelaaja 2
						select(name="select-2" id="select-2" data-bind="jqmValue: playerTwo, jqmOptions: playerListTwo, optionsText: 'name'", data-theme="d")
							option(data-bind="text: name")

				p
				
				span Kuuluu tapahtumaan:
				form
					fieldset(data-role="controlgroup", data-type="horizontal", data-mini="true")
						label(for="eventSelect") Kuuluu tapahtumaan...
						select(name="eventSelect", id="eventSelect", data-bind="jqmValue: event, jqmOptions: eventList, optionsText: 'name'", data-theme="d")
							option(data-bind="text: name")
				
				div(data-bind="if: eventList().length > 0")
					div(data-bind="if: event().affectsRanking() === 'false' ")
						p Ei vaikuta rankingiin
				
				p
	
				div#ala(style="margin: auto; text-align: center")
				
					span Pelataan paras:
				
					form
						fieldset(data-role="controlgroup" data-type="horizontal" data-mini="true")
							input(type="radio" name="bestOf" id="bestOf3" value="3" data-bind="checked: bestOf, mobileradio: bestOf", data-theme="d")
							label(for="bestOf3" style="border-radius: 2px") Kolmesta
							input(type="radio" name="bestOf" id="bestOf5" value="5" checked="checked" data-bind="checked: bestOf, mobileradio: bestOf", data-theme="d")
							label(for="bestOf5" style="border-radius: 2px") Viidest&auml;
				
					p
				
					a(href="#", data-role="button", data-inline="true", data-theme="b", data-bind="event: { tap : startMatch }")
						|Aloita peli
			
			//pre(data-bind="text: ko.toJSON($data, null, 2)")
		
		//div(style="background-color: #eee")
		//	pre(data-bind="text: ko.toJSON($data, null, 2)")					
							

	div#login(data-role="page", data-theme="b")
		div.loginSetupTop(data-role="header", data-position="fixed", data-fullscreen="true", data-theme="b")
		div(data-role="content", style="padding: 8px; padding-top: 30px")
			div(data-theme="a", data-role="content", style="border-radius: 6px")
				h1 Kirjaudu sisään
				form
					label Käyttäjätunnus
					input(type="text", name="user", id="user-tf", data-bind="value: user.username", autocapitalize="off")
					// username error
					label Salasana
					input(type="password", name="pass", id="pass-tf", data-bind="value: user.password")
					// password error
	
					div.ui-grid-a
						div.ui-block-a(style="width: 50%")
							label(for="rememberMe") Muista minut
							input(type="checkbox", checked="checked", data-bind="checked: user.rememberMe", id="rememberMe", value="on", data-mini="true")
						div.ui-block-b(style="width: 50%")
							a(data-role="button", data-bind="click: login", data-theme="b", data-mini="true")
								|Kirjaudu sisään
			//pre(data-bind="text: ko.toJSON($data, null, 2)")			
	
	

	div(id='app', data-role='page', data-title='squash app')
		div(class='ui-grid-b top', id='top')
			div(style='height: 22px', data-bind='visible: launchedFromHome')
			div.ui-block-a
				div(id='pip', style='width: 80px; height: 44px', data-bind='event: { click: undo }')
					a(href='#', data-role='button', data-inline='true', data-mini='true', data-theme='a', style='float: left', id='peru')
						|Peru
			div.ui-block-b
				div(id='doomings', data-bind='event: { tap: toggleCallsPopup }')
					a(href='#', data-role='button', data-inline='true', data-mini='true', data-theme='a', id='tuomiot', class='dialogBtn')
						|Tuomiot
					div#tuom_arrow
						span(style="font-size: 14px !important; font-weight: 300; text-shadow: 1px 0px 1px #000")
							//&#10095;
							i(class="fi-arrow-right")
			div.ui-block-c
				div(id='apop', data-bind='event: { click: openEndGamePopup }', style='height: 44px; float: right; margin-left: 40px')
					a(href='#', data-role='button', data-inline='true', data-mini='true', data-theme='b', id='asetukset', class='dialogBtn')
						| Lopeta 
				//div(id='apop', data-bind='event: { click: updateScores }')
					a(href="#", data-role="button", data-inline="true", data-mini="true", id="asetukset", class="dialogBtn")
						|Save
						
						
		div#tuom
			div(id='calls', data-theme='d')
				div(data-role='content', style="width: 100%")
					div(class="ui-grid-b", style="width: 100%")
						div(class='ui-block-a', style='width: 33%')
							div(style='float: right')
								a(href='#', class='yesLetBtn callButton', data-theme='d', data-mini='true', data-role='button', data-bind="click: $root.playerOneUpScore.bind($data, 'yeslet')")
									|Yes let
								a(href='#', class='noLetBtn callButton', data-theme='d', data-mini='true', data-role='button', data-bind="click: $root.playerOneUpScore.bind($data, 'nolet')")
									|No let
								a(href='#', class='strokeBtn callButton', data-theme='d', data-mini='true', data-role='button', data-bind="click: $root.playerOneUpScore.bind($data, 'stroke')")
									|Stroke
									
						div(class='ui-block-b', style='width: 33%, text-align: center')

						
						div(class='ui-block-c', style='width: 33%')
							div(style='float: left')
								a(href='#', class='yesLetBtn callButton', data-mini='true', data-role='button', data-bind="click: $root.playerTwoUpScore.bind($data, 'yeslet')")
									|Yes let
								a(href='#', class='noLetBtn callButton', data-mini='true', data-role='button', data-bind="click: $root.playerTwoUpScore.bind($data, 'nolet')")
									|No let
								a(href='#', class='strokeBtn callButton', data-mini='true', data-role='button', data-bind="click: $root.playerTwoUpScore.bind($data, 'stroke')")
									|Stroke
	
		div(data-role='content', data-theme='d', id='scroller', class='scroller')
			div(style="padding-bottom: 1px; padding-top: 0px", id="foo")
				div#scrollPad
				div#start(style="text-align: center; font-size: 11px")
					|Pelataan&nbsp;
					span(data-bind="text: playerOne().name", style="font-weight: 700")
					|&nbsp;vastaan&nbsp;
					span(data-bind="text: playerTwo().name", style="font-weight: 700")
					|,&nbsp;paras
					span(data-bind="if: bestOf() === '5'")
						|&nbsp;viidest&auml;.
					span(data-bind="if: bestOf() === '3'")
						|&nbsp;kolmesta.
				table#scoreBoard
					tbody(data-bind='foreach: scoreBoard')
						tr(class='hidden', data-bind='visible: ($index() === ($root.scoreBoard().length - 1)), css: { hidden:false }')
							// matchSet == true
						
							td(class='scoreCell scoreCellGameOver hidden', data-bind='visible: $root.matchSet == true, css: { hidden:false }')

							td(class="scoreCell scoreCellGameOver hidden" data-bind="text: playerOneScore, visible: $root.matchSet  == true, css: { hidden : false }" style="text-align: center; font-size: 150%")
						
							td(class='scoreCell scoreCellGames scoreCellGameOver hidden', data-bind='visible: $root.matchSet  == true, css: { hidden : false }')
								|(
								span(data-bind='text: playerOneGamesWon')
								|-
								span(data-bind='text: playerTwoGamesWon')
								|)
							td(class='scoreCell scoreCellGameOver hidden' data-bind="text: playerTwoScore, visible: $root.matchSet  == true, css: { hidden : false }" style="text-align: center; font-size: 150%")
						
							td(class="scoreCell scoreCellGameOver hidden" data-bind="visible: $root.matchSet  == true, css: { hidden : false }")
							// /matchSet 
						
							// gameOver == true
							td(class="scoreCell scoreCellGameOver scoreCellCall hidden"  data-bind="css: {  scoreCellPlayerOneYesLet : playerOneYesLet, scoreCellPlayerOneNoLet : playerOneNoLet, scoreCellPlayerOneStroke : playerOneStroke, hidden : false }, visible: gameOver() == true")
						
								div(class="hidden" data-bind="visible: playerOneYesLet() == true, css: { hidden : false }")
									|Yes let
								div(class="hidden" data-bind="visible: playerOneNoLet() == true, css: { hidden : false }")
									|No let
								div(class="hidden" data-bind="visible: playerOneStroke() == true, css: { hidden : false }")
									|Stroke
							td(class="scoreCell scoreCellGameOver hidden" data-bind="text: playerOneScore, visible: gameOver() == true, css: { hidden : false }")
							td( class="scoreCell scoreCellGames scoreCellGameOver hidden" data-bind="visible: gameOver() == true, css: { hidden : false }")
								|(
								span(data-bind="text: playerOneGamesWon")
								|-
								span(data-bind="text: playerTwoGamesWon")
								|)
								
							td(class="scoreCell scoreCellGameOver hidden" data-bind="text: playerTwoScore, visible: gameOver() == true, css: { hidden : false }")	
						
							td(class="scoreCell scoreCellGameOver scoreCellCall hidden" data-bind="css: { scoreCellPlayerTwoYesLet : playerTwoYesLet, scoreCellPlayerTwoNoLet : playerTwoNoLet, scoreCellPlayerTwoStroke : playerTwoStroke, hidden : false }, visible: gameOver() == true")
						
								div(class="hidden" data-bind="visible: playerTwoYesLet() == true, , css: { hidden : false }")
									|Yes let
								div(class="hidden" data-bind="visible: playerTwoNoLet() == true, , css: { hidden : false }")
									|No let
								div(class="hidden" data-bind="visible: playerTwoStroke() == true, , css: { hidden : false }")
									|Stroke
							// /gameOver == true
						
						
							// gameOver == false
						
							// 	gameBall == true

							td(class="scoreCell scoreCellGames scoreCellLatest scoreCellGameBall scoreCellCall hidden" data-bind!="css: {  scoreCellPlayerOneYesLet : playerOneYesLet, scoreCellPlayerOneNoLet : playerOneNoLet, scoreCellPlayerOneStroke : playerOneStroke, hidden : false }, visible: gameOver() == false && gameBall() == true")
						
								div(class="hidden" data-bind="visible: playerOneYesLet() == true, css: { hidden : false }")
									|Yes let
								div(class="hidden" data-bind="visible: playerOneNoLet() == true, css: { hidden : false }")
									|No let
								div(class="hidden" data-bind="visible: playerOneStroke() == true, css: { hidden : false }")
									|Stroke
						
							td(class="scoreCell scoreCellLatest scoreCellGameBall hidden" data-bind!="text: playerOneScore, visible: gameOver() == false && gameBall() == true, css: { hidden : false }")
						
							td(class="scoreCell scoreCellGames scoreCellLatest scoreCellGameBall hidden" data-bind!="visible: gameOver() == false && gameBall() == true, css: { hidden : false }")
								|-
						
							td(class="scoreCell scoreCellLatest scoreCellGameBall hidden" data-bind!="text: playerTwoScore, visible: gameOver() == false && gameBall() == true, css: { hidden : false }")
						
							td(class="scoreCell scoreCellGames scoreCellLatest scoreCellGameBall scoreCellCall hidden" data-bind!="css: {  scoreCellPlayerTwoYesLet : playerTwoYesLet, scoreCellPlayerTwoNoLet : playerTwoNoLet, scoreCellPlayerTwoStroke : playerTwoStroke, hidden : false }, visible: gameOver() == false && gameBall() == true")
						
								div(class="hidden" data-bind="visible: playerTwoYesLet() == true, css: { hidden : false }")
									|Yes let
								div(class="hidden" data-bind="visible: playerTwoNoLet() == true, css: { hidden : false }")
									|No let
								div(class="hidden" data-bind="visible: playerTwoStroke() == true, css: { hidden : false }")
									|Stroke
						
							// 	/gameBall == true
							//	gameBall == false
						
							td(class="scoreCell scoreCellLatest scoreCellCall hidden" data-bind!="css: { scoreCellOdd: ($index() % 2 !== 0), scoreCellPlayerOneYesLet : playerOneYesLet, scoreCellPlayerOneNoLet : playerOneNoLet, scoreCellPlayerOneStroke : playerOneStroke, hidden : false }, visible: gameOver() == false && gameBall() == false")
							
								div(class="hidden" data-bind="visible: playerOneYesLet() == true, css: { hidden : false }")
									|Yes let
								div(class="hidden" data-bind="visible: playerOneNoLet() == true, css: { hidden : false }")
									|No let
								div(class="hidden" data-bind="visible: playerOneStroke() == true, css: { hidden : false }")
									|Stroke
						
							td(class="scoreCell scoreCellLatest hidden" data-bind!="text: playerOneScore, css: { scoreCellOdd: ($index() % 2 !== 0), hidden : false }, visible: gameOver() == false && gameBall() == false")
						
							td(class="scoreCell scoreCellGames scoreCellLatest hidden" data-bind!="css: { scoreCellOdd: ($index() % 2 !== 0), hidden : false }, visible: gameOver() == false && gameBall() == false")
								|-
						
							td(class="scoreCell scoreCellLatest hidden" data-bind!="text: playerTwoScore, css: { scoreCellOdd: ($index() % 2 !== 0), hidden : false }, visible: gameOver() == false && gameBall() == false")
						
							td(class="scoreCell scoreCellLatest scoreCellCall hidden" data-bind!="css: { scoreCellOdd: ($index() % 2 !== 0), scoreCellPlayerTwoYesLet : playerTwoYesLet, scoreCellPlayerTwoNoLet : playerTwoNoLet, scoreCellPlayerTwoStroke : playerTwoStroke, hidden : false }, visible: gameOver() == false && gameBall() == false")
						
								div(class="hidden" data-bind="visible: playerTwoYesLet() == true, css: { hidden : false }")
									|Yes let
								div(class="hidden" data-bind="visible: playerTwoNoLet() == true, css: { hidden : false }")
									|No let
								div(class="hidden" data-bind="visible: playerTwoStroke() == true, css: { hidden : false }")
							
								//	/gameBall == false
								// /gameOver == false
					
						tr(class="hidden" data-bind="visible: ($index() !== ($root.scoreBoard().length -1)), css: { hidden : false }")
							// gameOver == true
						
							td(class="scoreCell scoreCellLatest scoreCellGameOver scoreCellCall hidden"  data-bind="css: {  scoreCellPlayerOneYesLet : playerOneYesLet, scoreCellPlayerOneNoLet : playerOneNoLet, scoreCellPlayerOneStroke : playerOneStroke, hidden : false }, visible: gameOver() == true")
						
								div(class="hidden" data-bind="visible: playerOneYesLet() == true, css: { hidden : false }")
									|Yes let
								div(class="hidden" data-bind="visible: playerOneNoLet() == true, css: { hidden : false }")
									|No let
								div(class="hidden" data-bind="visible: playerOneStroke() == true, css: { hidden : false }")
									|Stroke
							td(class="scoreCell scoreCellLatest scoreCellGameOver hidden" data-bind="text: playerOneScore, visible: gameOver() == true, css: { hidden : false }")
						
							td(class="scoreCell scoreCellGames scoreCellLatest scoreCellGameOver hidden" data-bind="visible: gameOver() == true, css: { hidden : false }")
								|(
								span(data-bind="text: playerOneGamesWon")
								|-
								span(data-bind="text: playerTwoGamesWon")
								|)
						
							td(class="scoreCell scoreCellLatest scoreCellGameOver hidden" data-bind="text: playerTwoScore, visible: gameOver() == true, css: { hidden : false }" style="text-align: center")
						
							td(class="scoreCell scoreCellLatest scoreCellGameOver scoreCellCall hidden" data-bind="css: { scoreCellPlayerTwoYesLet : playerTwoYesLet, scoreCellPlayerTwoNoLet : playerTwoNoLet, scoreCellPlayerTwoStroke : playerTwoStroke, hidden : false }, visible: gameOver() == true")
						
								div(class="hidden" data-bind="visible: playerTwoYesLet() == true, css: { hidden : false }")
									|Yes let
								div(class="hidden" data-bind="visible: playerTwoNoLet() == true, css: { hidden : false }")
									|No let
								div(class="hidden" data-bind="visible: playerTwoStroke() == true, css: { hidden : false }")
									|Stroke
							
								// /gameOver == true
							
								// gameOver == false
								//	gameBall == true
							
							td(class="scoreCell scoreCellGameBall scoreCellCall hidden" data-bind!="css: {  scoreCellPlayerOneYesLet : playerOneYesLet, scoreCellPlayerOneNoLet : playerOneNoLet, scoreCellPlayerOneStroke : playerOneStroke, hidden : false }, visible: gameOver() == false && gameBall() == true")
							
								div(class="hidden" data-bind="visible: playerOneYesLet() == true, css: { hidden : false }")
										|Yes let
								div(class="hidden" data-bind="visible: playerOneNoLet() == true, css: { hidden : false }")
										|No let
								div(class="hidden" data-bind="visible: playerOneStroke() == true, css: { hidden : false }")
										|Stroke
									
							td(class="scoreCell scoreCellGameBall hidden" data-bind!="text: playerOneScore, visible: gameOver() == false && gameBall() == true, css: { hidden : false }" style="text-align: center")

							td(class="scoreCell scoreCellGames scoreCellGameBall hidden" data-bind!="visible: gameOver() == false && gameBall() == true, css: { hidden : false }")
								|-
						
							td(class="scoreCell scoreCellGameBall hidden" data-bind!="text: playerTwoScore, visible: gameOver() == false && gameBall() == true, css: { hidden : false }" style="text-align: center")
						
							td(class="scoreCell scoreCellGameBall scoreCellCall hidden" data-bind!="css: { scoreCellPlayerTwoYesLet : playerTwoYesLet, scoreCellPlayerTwoNoLet : playerTwoNoLet, scoreCellPlayerTwoStroke : playerTwoStroke, hidden : false }, visible: gameOver() == false && gameBall() == true")
						
								div(class="hidden" data-bind="visible: playerTwoYesLet() == true, css: { hidden : false }")
									|Yes let
								div(class="hidden" data-bind="visible: playerTwoNoLet() == true, css: { hidden : false }")
									|No let
								div(class="hidden" data-bind="visible: playerTwoStroke() == true, css: { hidden : false }")
									|Stroke			
								
							// 	/gameBall == true
							// 	/gameBall == false

							td(class="scoreCell scoreCellGames scoreCellLatest scoreCellCall hidden" data-bind!="css: { scoreCellOdd: ($index() % 2 !== 0), scoreCellPlayerOneYesLet : playerOneYesLet, scoreCellPlayerOneNoLet : playerOneNoLet, scoreCellPlayerOneStroke : playerOneStroke, hidden : false }, visible: gameOver() == false && gameBall() == false")
						
								div(class="hidden" data-bind="visible: playerOneYesLet() == true, css: { hidden : false }")
									|Yes let
								div(class="hidden" data-bind="visible: playerOneNoLet() == true, css: { hidden : false }")
									|No let
								div(class="hidden" data-bind="visible: playerOneStroke() == true, css: { hidden : false }")
									|Stroke													
								
							td(class="scoreCell hidden" data-bind!="text: playerOneScore, css: { scoreCellOdd: ($index() % 2 !== 0), hidden : false }, visible: gameOver() == false && gameBall() == false")
						
							td(class="scoreCell scoreCellGames hidden" data-bind!="css: { scoreCellOdd: ($index() % 2 !== 0), hidden : false }, visible: gameOver() == false && gameBall() == false")
								|-
						
							td(class="scoreCell hidden" data-bind!="text: playerTwoScore, css: { scoreCellOdd: ($index() % 2 !== 0), hidden : false }, , visible: gameOver() == false && gameBall() == false")

							td(class="scoreCell scoreCellGames scoreCellLatest scoreCellCall hidden" data-bind!="css: { scoreCellOdd: ($index() % 2 !== 0), scoreCellPlayerTwoYesLet : playerTwoYesLet, scoreCellPlayerTwoNoLet : playerTwoNoLet, scoreCellPlayerTwoStroke : playerTwoStroke, hidden : false } , visible: gameOver() == false && gameBall() == false")
							
								div(class="hidden" data-bind="visible: playerTwoYesLet() == true, css: { hidden : false }")
									|Yes let
								div(class="hidden" data-bind="visible: playerTwoNoLet() == true, css: { hidden : false }")
									|No let
								div(class="hidden" data-bind="visible: playerTwoStroke() == true, css: { hidden : false }")
									|Stroke
									
		
		div(data-role="popup" id="endGamePopup" data-theme="a" data-dismissible="false")
		
			a(data-role="button" data-rel="back" data-icon="delete" data-iconpos="notext" data-inline="true" data-theme="b" data-bind="click: closeEndGamePopup" style="border-radius: 50%; display: inline-block")
			
			div(style="width: 100%; height: 100%", data-role="ui-content", style="padding: 14px; padding-top: 0px")
				
				div(style="text-align: center")
				
					h3(style="padding-top: 2px; margin-top: 2px")
						span(data-bind="visible: matchSet() !== false")						Peli on ohi!
						span(data-bind="visible: matchSet() === false") Peli on kesken.
					
										
					span(data-bind="text: playerOne().name, css: { winner : matchSet() === 'p1' } ", style="text-align: center")
					&nbsp;
					span(data-bind="text: playerOneGamesWon", style="text-align: center")
					|&nbsp;-&nbsp;
					span(data-bind="text: playerTwoGamesWon", style="text-align: center")
					&nbsp;
					span(data-bind="text: playerTwo().name, css: { winner : matchSet() === 'p2'}", style="text-align: center")
				
				p

				div(data-bind="if: gameScores().length > 0", style="text-align: center")
						span(style="text: align: center; font-size: 12px") Erät:
				
				div(data-bind="foreach: gameScores", style="text-align: center; font-size: 12px")
					span(data-bind="text: p1score")
					|-
					span(data-bind="text: p2score")
					span(data-bind="if: ($index() !== ($root.gameScores().length - 1))")
						|,&nbsp;
					

				div.ui-grid-a(data-bind="if: matchSet() !== false")
					div.ui-block-a
						&nbsp;					
					
					div.ui-block-b
						a(href="/application", data-role="button", data-mini="true", data-theme="b", data-inline="true", style="float: right", data-bind="if: matchSet() !== false, click: leaveGame")
							| Sulje
						


				
				div.ui-grid-a(data-bind="if: matchSet() === false")
					div.ui-block-a(style="float: left; width: 70%")
						small(style="font-size: 12px") Jos poistut kesken pelin, peli ei näy tuloslistoilla
					
					div.ui-block-b(style="float: right; width: 30%")
						a(href="#", data-role="button", data-mini="true", data-theme="e", data-inline="true", style="float: right", data-bind="if: matchSet() === false,  click: leaveGame")
							| Poistu


		div(id="scoreBar", class="ui-grid-b", data-role="content" data-theme="a")
			div(class="ui-block-a", style="width: 40%; text-align: center")
				div.playerName
					span(data-bind="text: playerOne().name")
			div(class="ui-block-b gameScores", style="width: 20%; text-align: center")
				|(
				span(data-bind="text: playerOneGamesWon")
				|-
				span(data-bind="text: playerTwoGamesWon")
				|)
			div(class="ui-block-c", style="width: 40%; text-align: center")
				div.playerName
					span(data-bind="text: playerTwo().name")
	
		div(id="gameScores", style="height: 22px", data-role="content", data-theme="a")
			div(style="text-align: center; margin: auto")
				// ko if: gameScores().length > 0
				div(data-bind="foreach: gameScores", style="margin: auto")
					span(data-bind="text: p1score")
					|-
					span(data-bind="text: p2score")
					span(data-bind="if: ($index() !== ($root.gameScores().length - 1))")
						|,
				// /ko
	
		div(class="ui-grid-a", data-role="content", data-theme="a", id="slaidiDiv")
			div(class="ui-block-a sliderContainer")
				div.sliderW
					div(data-bind="value: playerOneSlider, uislider: playerOneSlider, event: { slide: playerOneSliderMove, slidestop: resetSlider }, sliderOptions: { value: 0, min: 0, max: 50, step: 1, animate: 'slow' }", name="slider", id="p1slide", class="slaidi", min="0", max="50")
	
			div(class="ui-block-b sliderContainer")
				div.sliderW
					div(data-bind="value: playerTwoSlider, uislider: playerTwoSlider, event: { slide: playerTwoSliderMove, slidestop: resetSlider }, sliderOptions: { value: 0, min: 0, max: 50, step: 1, animate: 'slow' }", name="slider", id="p2slide", class="slaidi", min="0", max="50")

		
			
	

